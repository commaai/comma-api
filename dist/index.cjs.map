{"version":3,"sources":["../src/index.ts","../src/account.ts","../src/config.ts","../src/instance.ts","../src/request.ts","../src/athena.ts","../src/auth/index.ts","../src/auth/config.ts","../src/auth/storage.ts","../src/billing.ts","../src/clips.ts","../src/devices.ts","../src/derived.ts","../src/drives.ts","../src/raw.ts","../src/navigation.ts","../src/video.ts"],"sourcesContent":["import * as account from './account'\nimport * as athena from './athena'\nimport * as auth from './auth'\nimport * as billing from './billing'\nimport * as clips from './clips'\nimport * as devices from './devices'\nimport derived from './derived'\nimport * as drives from './drives'\nimport * as raw from './raw'\nimport request from './request'\nimport * as navigation from './navigation'\nimport * as video from './video'\n\nexport {\n  account,\n  athena,\n  auth,\n  billing,\n  clips,\n  devices,\n  derived,\n  drives,\n  raw,\n  request,\n  navigation,\n  video,\n}\n","import request from './request'\n\nexport function getProfile(dongleId = 'me') {\n  return request.get(`v1/${dongleId}/`)\n}\n","interface CommaApiConfig {\n  COMMA_API_URL: string\n  ATHENA_API_URL: string\n  BILLING_API_URL: string\n}\n\ndeclare global {\n  interface Window {\n    Comma?: CommaApiConfig\n  }\n}\n\nconst config = {\n  COMMA_API_URL: typeof window !== 'undefined' && window.Comma?.COMMA_API_URL || 'https://api.comma.ai/',\n  ATHENA_API_URL: typeof window !== 'undefined' && window.Comma?.ATHENA_API_URL || 'https://athena.comma.ai/',\n  BILLING_API_URL: typeof window !== 'undefined' && window.Comma?.BILLING_API_URL || 'https://billing.comma.ai/',\n}\n\nexport default config\n","export class RequestError extends Error {\n  resp: Response\n\n  constructor(resp: Response, message?: string) {\n    super(message)\n    this.resp = resp\n  }\n}\n\nexport type HTTPHeader = 'Authorization' | 'Content-Type'\n\nexport default class ConfigRequest {\n  baseUrl: string\n  defaultHeaders: { [name in HTTPHeader]?: string }\n\n  constructor(baseUrl: string) {\n    this.defaultHeaders = {\n      'Content-Type': 'application/json',\n    }\n    this.baseUrl = baseUrl + (!baseUrl.endsWith('/') ? '/' : '')\n  }\n\n  setDefaultHeader(name: HTTPHeader, value: string): void {\n    this.defaultHeaders[name] = value\n  }\n\n  removeDefaultHeader(name: HTTPHeader): void {\n    delete this.defaultHeaders[name]\n  }\n\n  async request(method: string, endpoint: string, params?: Record<string, any>, dataJson = true, respJson = true) {\n    const headers = { ...this.defaultHeaders }\n    if (!dataJson) {\n      headers['Content-Type'] = 'application/x-www-form-urlencoded'\n    }\n\n    let requestUrl = this.baseUrl + endpoint\n    let body\n    if (params && Object.keys(params).length !== 0) {\n      if (method === 'GET' || method === 'HEAD') {\n        requestUrl += `?${new URLSearchParams(params)}`\n      } else if (dataJson) {\n        body = JSON.stringify(params)\n      } else {\n        body = new URLSearchParams(params).toString()\n      }\n    }\n\n    const resp = await fetch(requestUrl, { method, headers, body })\n    if (!resp.ok) {\n      const error = await resp.text()\n      throw new RequestError(resp, `${resp.status}: ${error}`)\n    }\n    if (!respJson) {\n      return resp\n    }\n    return resp.json()\n  }\n\n  async get(endpoint: string, params?: Record<string, any>, dataJson = true, respJson = true) {\n    return this.request('GET', endpoint, params, dataJson, respJson)\n  }\n\n  async head(endpoint: string, params?: Record<string, any>, dataJson = true, respJson = true) {\n    return this.request('HEAD', endpoint, params, dataJson, respJson)\n  }\n\n  async post(endpoint: string, params?: Record<string, any>, dataJson = true, respJson = true) {\n    return this.request('POST', endpoint, params, dataJson, respJson)\n  }\n\n  async postForm(endpoint: string, params?: Record<string, any>) {\n    return this.post(endpoint, params, false)\n  }\n\n  async put(endpoint: string, params?: Record<string, any>, dataJson = true, respJson = true) {\n    return this.request('PUT', endpoint, params, dataJson, respJson)\n  }\n\n  async delete(endpoint: string, params?: Record<string, any>, dataJson = true, respJson = true) {\n    return this.request('DELETE', endpoint, params, dataJson, respJson)\n  }\n\n  async patch(endpoint: string, params?: Record<string, any>, dataJson = true, respJson = true) {\n    return this.request('PATCH', endpoint, params, dataJson, respJson)\n  }\n}\n","import Config from './config'\nimport ConfigRequest from './instance'\n\nexport default new ConfigRequest(Config.COMMA_API_URL)\n","import Config from './config'\nimport ConfigRequest from './instance'\n\nconst request = new ConfigRequest(Config.ATHENA_API_URL)\n\nexport function configure(accessToken: string) {\n  request.setDefaultHeader('Authorization', accessToken)\n}\n\nexport async function postJsonRpcPayload(dongleId: string, payload: Record<string, any>) {\n  return request.post(dongleId, payload)\n}\n","import request from '../request'\n\nimport * as config from './config'\nimport * as storage from './storage'\n\nexport async function refreshAccessToken(code: string, provider: string): Promise<string> {\n  const resp = await request.postForm('v2/auth/', { code, provider })\n\n  if (resp.access_token != null) {\n    request.setDefaultHeader('Authorization', resp.access_token)\n    return resp.access_token\n  } if (resp.response !== undefined) {\n    throw new Error(`Could not exchange oauth code for access token: response ${resp.response}`)\n  } else if (resp.error !== undefined) {\n    throw new Error(`Could not exchange oauth code for access token: error ${resp.error}`)\n  } else {\n    throw new Error(`Could not exchange oauth code for access token: ${resp}`)\n  }\n}\n\nexport function isSignedIn(): boolean {\n  return storage.getAccessToken() != null\n}\n\nexport function getAccessToken(): string | null {\n  return storage.getAccessToken()\n}\n\nexport function signOut(): void {\n  storage.clearAccessToken()\n  request.removeDefaultHeader('Authorization')\n}\n\nexport {\n  config,\n}\n","let service = 'localhost:3000'\nif (typeof window !== 'undefined') {\n  service = window.location.host\n}\n\nfunction stringify(obj: Record<string, string>) {\n  return new URLSearchParams(obj).toString()\n}\n\nconst GOOGLE_OAUTH_PARAMS = {\n  type: 'web_server',\n  client_id:\n    '45471411055-ornt4svd2miog6dnopve7qtmh5mnu6id.apps.googleusercontent.com',\n  redirect_uri: 'https://api.comma.ai/v2/auth/g/redirect/',\n  response_type: 'code',\n  scope: 'https://www.googleapis.com/auth/userinfo.email',\n  state: 'service,' + service,\n  prompt: 'select_account',\n}\nexport const GOOGLE_AUTH_URL =\n  'https://accounts.google.com/o/oauth2/auth?' + stringify(GOOGLE_OAUTH_PARAMS)\n\nconst APPLE_OAUTH_PARAMS = {\n  client_id: 'ai.comma.login',\n  redirect_uri: 'https://api.comma.ai/v2/auth/a/redirect/',\n  response_type: 'code',\n  response_mode: 'form_post',\n  scope: 'name email',\n  state: 'service,' + service,\n}\nexport const APPLE_AUTH_URL =\n  'https://appleid.apple.com/auth/authorize?' + stringify(APPLE_OAUTH_PARAMS)\n\nconst GITHUB_OAUTH_PARAMS = {\n  client_id: '28c4ecb54bb7272cb5a4',\n  redirect_uri: 'https://api.comma.ai/v2/auth/h/redirect/',\n  scope: 'read:user',\n  state: 'service,' + service,\n}\nexport const GITHUB_AUTH_URL =\n  'https://github.com/login/oauth/authorize?' + stringify(GITHUB_OAUTH_PARAMS)\n","const AUTH_KEY = 'ai.comma.api.authoriazation'\n\nexport function getAccessToken(): string | null {\n  if (typeof window === 'undefined') {\n    return null\n  }\n  return window.localStorage.getItem(AUTH_KEY)\n}\n\nexport function setAccessToken(token: string): void {\n  if (typeof window === 'undefined') {\n    return\n  }\n  window.localStorage.setItem(AUTH_KEY, token)\n}\n\nexport function clearAccessToken(): void {\n  if (typeof window === 'undefined') {\n    return\n  }\n  window.localStorage.removeItem(AUTH_KEY)\n}\n","import Config from './config'\nimport ConfigRequest from './instance'\n\nconst request = new ConfigRequest(Config.BILLING_API_URL)\n\nexport function configure(accessToken: string) {\n  request.setDefaultHeader('Authorization', accessToken)\n}\n\nexport async function getSubscription(dongle_id: string) {\n  return request.get('v1/prime/subscription', { dongle_id })\n}\n\nexport async function getSubscribeInfo(dongle_id: string) {\n  return request.get('v1/prime/subscribe_info', { dongle_id })\n}\n\nexport async function cancelPrime(dongle_id: string) {\n  return request.post('v1/prime/cancel', { dongle_id })\n}\n\nexport async function getSimValid(dongle_id: string, sim_id: string) {\n  return request.get('v1/prime/sim_valid', { dongle_id, sim_id })\n}\n\nexport async function getStripeCheckout(dongle_id: string, sim_id: string, plan: string) {\n  return request.post('v1/prime/stripe_checkout', { dongle_id, sim_id, plan })\n}\n\nexport async function getStripePortal(dongle_id: string) {\n  return request.get('v1/prime/stripe_portal', { dongle_id })\n}\n\nexport async function getStripeSession(dongle_id: string, session_id: string) {\n  return request.get('v1/prime/stripe_session', { dongle_id, session_id })\n}\n","import request from './request'\n\nexport async function clipsCreate(route: string, title: string, start_time: number, end_time: number, video_type: string, is_public: boolean) {\n  return request.post('v1/clips/create', {\n    route, title, start_time, end_time, video_type, is_public,\n  })\n}\n\nexport async function clipsList(dongle_id: string) {\n  return request.get('v1/clips/list', { dongle_id })\n}\n\nexport async function clipsDetails(dongle_id: string, clip_id: string) {\n  return request.get('v1/clips/details', { dongle_id, clip_id })\n}\n\nexport async function clipsUpdate(dongle_id: string, clip_id: string, is_public: boolean) {\n  return request.patch('v1/clips/update', { dongle_id, clip_id, is_public })\n}\n\nexport async function clipsDelete(dongle_id: string, clip_id: string) {\n  return request.delete('v1/clips/update', { dongle_id, clip_id })\n}\n","import request from './request'\n\n\nexport function listDevices() {\n  return request.get('v1/me/devices/')\n}\n\nexport function setDeviceAlias(dongleId: string, alias: string) {\n  return request.patch(`v1/devices/${dongleId}/`, { alias })\n}\n\nexport function grantDeviceReadPermission(dongleId: string, email: string) {\n  return request.post(`v1/devices/${dongleId}/add_user`, { email })\n}\n\nexport function removeDeviceReadPermission(dongleId: string, email: string) {\n  return request.post(`v1/devices/${dongleId}/del_user`, { email })\n}\n\nexport async function fetchLocation(dongleId: string) {\n  const locationEndpoint = `v1/devices/${dongleId}/location`\n  const location = await request.get(locationEndpoint)\n  if (location !== undefined && location.error === undefined) {\n    return location\n  }\n  throw Error(`Could not fetch device location: ${JSON.stringify(location)}`)\n}\n\nexport function fetchDevice(dongleId: string) {\n  const deviceEndpoint = `v1.1/devices/${dongleId}/`\n  return request.get(deviceEndpoint)\n}\n\nexport function pilotPair(pair_token: string) {\n  return request.postForm('v2/pilotpair/', { pair_token })\n}\n\nexport function fetchDeviceStats(dongleId: string) {\n  return request.get(`v1.1/devices/${dongleId}/stats`)\n}\n\nexport function unpair(dongleId: string) {\n  return request.post(`v1/devices/${dongleId}/unpair`)\n}\n\nexport function fetchDeviceOwner(dongleId: string) {\n  return request.get(`v1/devices/${dongleId}/owner`)\n}\n\nexport function getAthenaQueue(dongleId: string) {\n  return request.get(`v1/devices/${dongleId}/athena_offline_queue`)\n}\n","import ConfigRequest from './instance'\n\nexport default function routeApi(routeSigUrl: string) {\n  const request = new ConfigRequest(routeSigUrl)\n\n  return {\n    getCoords: async (cacheKey = 0) => request.get(`route.coords?s=${cacheKey}`),\n    getJpegUrl: (routeOffsetSeconds: number) => `${routeSigUrl}/sec/${routeOffsetSeconds.toString()}.jpg`,\n  }\n}\n","import request from './request'\n\nconst SEGMENT_LENGTH = 1000 * 60\n\nexport function getSegmentMetadata(start: number, end: number, dongleId: string) {\n  return request.get(`v1/devices/${dongleId}/segments`, {\n    from: start,\n    to: end,\n  })\n}\n\nexport function getRoutesSegments(dongleId: string, start: number, end: number) {\n  return request.get(`v1/devices/${dongleId}/routes_segments`, { start, end })\n}\n\nexport function getRouteInfo(routeName: string) {\n  return request.get(`v1/route/${routeName}/`)\n}\n\nexport function setRoutePublic(routeName: string, is_public: boolean) {\n  return request.patch(`v1/route/${routeName}/`, { is_public })\n}\n\nexport function setRoutePreserved(routeName: string, preserved: boolean) {\n  return request.request(preserved ? 'POST' : 'DELETE', `v1/route/${routeName}/preserve`)\n}\n\nexport function getPreservedRoutes(dongleId: string) {\n  return request.get(`v1/devices/${dongleId}/routes/preserved`)\n}\n\nexport function getShareSignature(routeName: string) {\n  return request.get(`v1/route/${routeName}/share_signature`)\n}\n\nexport function getRouteSegments(routeName: string) {\n  return request.get(`v1/route/${routeName}/segments`)\n}\n\nexport function listRoutes(dongleId: string, limit: number, createdAfter?: number) {\n  return request.get(`v1/devices/${dongleId}/routes`, { limit, createdAfter })\n}\n\nfunction parseSegmentMetadata(start: number, end: number, segments: any[]) {\n  const routeStartTimes: Record<string, number> = {};\n\n  return segments.map((s) => {\n    const segment = {\n      ...s,\n      duration: Math.round(s.end_time_utc_millis - s.start_time_utc_millis),\n      offset: Math.round(s.start_time_utc_millis) - start,\n    };\n\n    if (!routeStartTimes[s.canonical_route_name]) {\n      segment.segment = Number(s.canonical_name.split('--')[2]);\n      routeStartTimes[s.canonical_route_name] = segment.offset - (SEGMENT_LENGTH * segment.segment);\n    }\n    segment.routeOffset = routeStartTimes[s.canonical_route_name];\n\n    return segment;\n  });\n}\n\n// TODO: understand this and write tests\nfunction segmentsFromMetadata(segmentsData: any[]) {\n  function finishSegment(segment: any) {\n    if (!segment.hasVideo) {\n      return;\n    }\n\n    const { videoAvailableBetweenOffsets } = segment;\n    let lastVideoRange = videoAvailableBetweenOffsets[videoAvailableBetweenOffsets.length - 1];\n    if (!lastVideoRange) {\n      lastVideoRange = [segment.offset, segment.offset + segment.duration];\n    }\n\n    // TODO: refactor\n    // eslint-disable-next-line no-param-reassign\n    segment.videoAvailableBetweenOffsets = [\n      ...videoAvailableBetweenOffsets.slice(0, videoAvailableBetweenOffsets.length - 1),\n      [lastVideoRange[0], segment.offset + segment.duration],\n    ];\n  }\n\n  let segment: any = null;\n  let videoStartOffset: number | null = null;\n  const segments: any[] = [];\n  segmentsData.forEach((s) => {\n    if (!s.url) {\n      return;\n    }\n    if (!(s.proc_log === 40 || s.proc_qlog === 40)) {\n      return;\n    }\n    const segmentHasDriverCamera = (s.proc_dcamera >= 0);\n    const segmentHasDriverCameraStream = (s.proc_dcamera === 40);\n    const segmentHasVideo = (s.proc_camera === 40);\n    if (segmentHasVideo && videoStartOffset === null) {\n      videoStartOffset = s.offset;\n    }\n\n    if (!segment || segment.route !== s.canonical_route_name) {\n      if (segment) {\n        finishSegment(segment);\n      }\n      let { url } = s;\n      const parts = url.split('/');\n\n      if (Number.isFinite(Number(parts.pop()))) {\n        // url has a number at the end\n        url = parts.join('/');\n      }\n      segment = {\n        dongleId: s.dongle_id,\n        offset: s.offset - (s.segment * SEGMENT_LENGTH),\n        route: s.canonical_route_name,\n        startTime: s.start_time_utc_millis,\n        startCoord: [s.start_lng, s.start_lat],\n        duration: 0,\n        segments: 0,\n        url: url.replace('chffrprivate.blob.core.windows.net', 'chffrprivate.azureedge.net'),\n        events: [],\n        videoAvailableBetweenOffsets: [],\n        hasVideo: segmentHasVideo,\n        deviceType: s.devicetype,\n        hpgps: s.hpgps,\n        hasDriverCamera: segmentHasDriverCamera,\n        hasDriverCameraStream: segmentHasDriverCameraStream,\n        locStart: '',\n        locEnd: '',\n        distanceMiles: 0.0,\n        cameraStreamSegCount: 0,\n        driverCameraStreamSegCount: 0,\n      };\n      segments.push(segment);\n    }\n    if (!segmentHasVideo && videoStartOffset !== null) {\n      segment.videoAvailableBetweenOffsets.push([videoStartOffset, s.offset]);\n      videoStartOffset = null;\n    }\n    segment.hasVideo = (segment.hasVideo || segmentHasVideo);\n    segment.hasDriverCamera = (segment.hasDriverCamera || segmentHasDriverCamera);\n    segment.hasDriverCameraStream = (segment.hasDriverCameraStream || segmentHasDriverCameraStream);\n    segment.hpgps = (segment.hpgps || s.hpgps);\n    segment.duration = (s.offset - segment.offset) + s.duration;\n    segment.segments = Math.max(segment.segments, Number(s.canonical_name.split('--').pop()) + 1);\n    segment.events = segment.events.concat(s.events);\n    segment.endCoord = [s.end_lng, s.end_lat];\n    segment.distanceMiles += s.length;\n    segment.cameraStreamSegCount += segmentHasVideo;\n    segment.driverCameraStreamSegCount += segmentHasDriverCameraStream;\n  });\n\n  if (segment) {\n    finishSegment(segment);\n  }\n\n  return segments;\n}\n\nexport async function fetchRoutes(dongleId: string, start: number, end: number) {\n  let segments = await getSegmentMetadata(start, end, dongleId);\n  segments = parseSegmentMetadata(start, end, segments);\n  return segmentsFromMetadata(segments).reverse();\n}\n","import request from './request'\n\n// TODO: investigate whether to use IndexedDB or localStorage\nconst urlStore: Record<string, any> = {}\n\nasync function getCached(endpoint: string, params?: Record<string, any>, nocache = false) {\n  let url = endpoint\n  if (params !== undefined) {\n    url += `?${new URLSearchParams(params)}`\n  }\n\n  // don't bother bouncing because the URLs themselves expire\n  // our expiry time is from initial fetch time, not most recent access\n  if (urlStore[url] && !nocache) {\n    return urlStore[url]\n  }\n\n  urlStore[url] = await request.get(url)\n\n  setTimeout(() => {\n    delete urlStore[url]\n  }, 1000 * 60 * 45) // expires in 1h, lets reset in 45m\n\n  return urlStore[url]\n}\n\nexport function getRouteFiles(routeName: string, nocache = false, params = undefined) {\n  return getCached(`v1/route/${routeName}/files`, params, nocache)\n}\n\nexport function getUploadUrl(dongleId: string, path: string, expiry_days?: number) {\n  return getCached(`v1.4/${dongleId}/upload_url/`, { path, expiry_days })\n}\n\nexport async function getUploadUrls(dongleId: string, paths: string[], expiry_days?: number) {\n  return request.post(`v1/${dongleId}/upload_urls/`, { paths, expiry_days })\n}\n","import request from './request'\n\nexport function setDestination(dongleId: string, latitude: number, longitude: number, place_name: string, place_details: string) {\n  return request.post(`v1/navigation/${dongleId}/set_destination`, {\n    latitude,\n    longitude,\n    place_name,\n    place_details,\n  })\n}\n\nexport function getLocationsData(dongleId: string) {\n  return request.get(`v1/navigation/${dongleId}/locations`)\n}\n\nexport function putLocationSave(\n  dongleId: string,\n  latitude: number,\n  longitude: number,\n  place_name: string,\n  place_details: string,\n  save_type?: 'favorite' | 'recent',\n  label?: string,\n) {\n  return request.put(`v1/navigation/${dongleId}/locations`, {\n    latitude,\n    longitude,\n    place_name,\n    place_details,\n    save_type,\n    label,\n  })\n}\n\nexport function patchLocationSave(dongleId: string, navLocationId: number, saveType: 'favorite' | 'recent', label?: string) {\n  return request.patch(`v1/navigation/${dongleId}/locations`, {\n    id: navLocationId,\n    save_type: saveType,\n    label,\n  })\n}\n\nexport function deleteLocationSave(dongleId: string, navLocationId: number) {\n  return request.delete(`v1/navigation/${dongleId}/locations`, { id: navLocationId })\n}\n\nexport function getLocationsNext(dongleId: string) {\n  return request.get(`v1/navigation/${dongleId}/next`)\n}\n","import Config from './config'\nimport ConfigRequest from './instance'\n\nconst request = new ConfigRequest(Config.COMMA_API_URL)\n\nexport function getQcameraStreamUrl(routeStr: string, exp: string, sig: string) {\n  return `${request.baseUrl}v1/route/${routeStr}/qcamera.m3u8?${new URLSearchParams({ exp, sig })}`\n}\n"],"mappings":"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","names":["getAccessToken","getAccessToken","configure","request","configure","request","segment","request"]}